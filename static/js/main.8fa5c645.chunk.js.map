{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","newtext","document","getElementById","navigator","clipboard","writeText","split","join","length","Alert","alert","role","capText","charAt","slice","captalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8fa5c645.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\" to=\"/about\">About</Link> */}\r\n              </li>\r\n            </ul>\r\n            <form className=\"d-flex\">\r\n                    <div className=\"form-check form-switch\">\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n          <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='light'?'dark':'light'} mode</label>\r\n        </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n        title: PropTypes.string\r\n};\r\nNavbar.defaultProps = {\r\n    title : \"Logo Here\"\r\n  };","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text,setText] = useState('Enter Text Here');\r\n    const handelUpClick = ()=>{\r\n       let  newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text Capitalized successfully\" ,\"success\")\r\n    }\r\n    const handelLowClick = ()=>{\r\n        let  newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase successfully\" ,\"success\")\r\n    }\r\n    const handleCopy = ()=>{\r\n        var newtext  = document.getElementById('text-box').value;\r\n        //   newtext.select();\r\n        //   newtext.setSelectionRange(0,9999)\r\n        navigator.clipboard.writeText(newtext)\r\n        props.showAlert(\"Text Copied to clipboard successfully\" ,\"success\")\r\n    }\r\n    const handelExtraSpaces = ()=>{\r\n        let newtext = text.split(/[ ]+/);\r\n        setText(newtext.join(\" \"));\r\n        props.showAlert(\"Extra spaces Removed from Text successfully\" ,\"success\")\r\n    }\r\n\r\n    const handelOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color :props.mode==='light'?'black':'white'}}>\r\n\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handelOnChange} style={{backgroundColor :props.mode==='light'?'white':'grey',color :props.mode==='light'?'black':'white'}} id=\"text-box\" rows=\"8\"></textarea>\r\n\r\n            <button className=\"btn btn-primary my-3 mx-3\" onClick={handelUpClick} >Convert to UpperCase</button>\r\n            <button className=\"btn btn-primary my-3 mx-3\" onClick={handelLowClick} >Convert to LowerCase</button>\r\n            <button className=\"btn btn-primary my-3 mx-3\" onClick={handleCopy} >Copy Text</button>\r\n            <button className=\"btn btn-primary my-3 mx-3\" onClick={handelExtraSpaces} >Remove Extra Space</button>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h2>Text Summary</h2>\r\n                <p>{(text.split(\" \").length)} words and {text.length} Charachters</p>\r\n                <p>{(0.08 * ((text.split(\" \").length)-1)) } Minutes to Read</p>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h2>Preview</h2>\r\n                <p>{text===''?\"Enter something in textarea above to preview it!\":text}</p>\r\n            </div>\r\n        </div>\r\n</>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const captalize = (text)=>{\r\n        let capText = text.toLowerCase();\r\n        return capText.charAt(0).toUpperCase() + capText.slice(1);\r\n    }\r\n    return (\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                    <strong>{captalize (props.alert.type)}</strong>:  {props.alert.msg}\r\n                </div>\r\n    )\r\n}\r\n","import './App.css';\nimport React, { useState } from 'react'\nimport Navbar from'./components/Navbar'\n// import About from'./components/About'\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\nconst [mode, setMode] = useState('light');\nconst [alert, setAlert] = useState(null);\n\n\nconst showAlert = (message,type)=>{\n        setAlert({\n          msg : message,\n          type : type\n        })\n        setTimeout(() => {\n          setAlert(null)\n        }, 1500);\n}\nconst toggleMode = ()=>{\n  if (mode==='light') {\n    setMode('dark')\n    document.body.style.backgroundColor ='grey';\n    showAlert(\"Dark mode has been Enabled\",\"success\")\n    // setInterval(() => {\n    //   document.title = \"Text-utills App\"\n    // }, 1000);\n    // setInterval(() => {\n    //   document.title = \"Install Text-utills\"\n    // }, 700);\n  }else{\n    setMode('light')\n    document.body.style.backgroundColor ='white';\n    showAlert(\"Light mode has been Enabled\",\"success\")\n  }\n}\n  return (\n   <>\n    {/* <Router> */}\n    <Navbar title=\"Ali Logo\" mode={mode} toggleMode={toggleMode} />\n    {/* <Navbar /> */}\n    <Alert alert={alert} />\n        {/* <Switch> */}\n          {/* <Route path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n          {/* <Route path=\"/\"> */}\n            <div className=\"container my-3\">\n            <TextForm showAlert={showAlert} heading=\"Enter Text to Analyze Below\" mode={mode} />\n            </div>\n          {/* </Route> */}\n        {/* </Switch> */}\n    {/* </Router> */}\n   </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}